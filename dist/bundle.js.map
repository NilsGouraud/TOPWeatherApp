{"version":3,"file":"bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACN+C;AAC3C;AACJ;AACA;;AAEAA,sIAAoB,CAAC,CAAC;AACtBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;AAE1B,MAAMC,SAAS,GAACC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACpD,MAAMC,MAAM,GAACF,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;AAC9C;;AAEA,MAAME,kBAAkB,GAACH,QAAQ,CAACI,gBAAgB,CAAC,WAAW,CAAC;;AAE/D;AACA,MAAMC,IAAI,GAACL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAC1C,MAAMK,OAAO,GAACN,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAChD,MAAMM,IAAI,GAACP,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAC1C,MAAMO,WAAW,GAACR,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;AACxD,MAAMQ,SAAS,GAACT,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACpD,MAAMS,YAAY,GAACV,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;;AAE1D;AACA,MAAMU,OAAO,GAACX,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AAChD,MAAMW,QAAQ,GAACZ,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AAClD,MAAMY,YAAY,GAACb,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AAC1D,MAAMa,SAAS,GAACd,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;;AAGpD;AACA,MAAMc,eAAe,GAAC,CAClBf,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAC7CD,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAC7CD,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC,CAClD;AAED,MAAMe,YAAY,GAAC,CACfhB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,EAClCD,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,EAClCD,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CACvC;AAED,MAAMgB,iBAAiB,GAAC,CACpBjB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,EACvCD,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,EACvCD,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAC5C;AAED,MAAMiB,YAAY,GAAC,CACflB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,EAClCD,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,EAClCD,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CACvC;AAED,MAAMkB,OAAO,GAAC,+BAA+B;AAC7C,MAAMC,aAAa,GAAC,iCAAiC;AACrD,MAAMC,YAAY,GAAC,OAAO,GAACD,aAAa;AAExC,MAAME,OAAO,GAAC,CAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,CAAC;AACvF;;AAEA,MAAMC,SAAS,GAAC,CAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,CAAC;AAE/H,eAAeC,iBAAiBA,CAACC,QAAQ,EAAC;EACtC,IAAI;IACAtB,kBAAkB,CAACuB,OAAO,CAACC,SAAS,IAAEA,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEzE,IAAIC,OAAO,GAAC,MAAMC,KAAK,CAACZ,OAAO,GAAC,gBAAgB,GAACE,YAAY,GAAC,SAAS,GAAC,KAAK,GAACI,QAAQ,EAAC;MAACO,IAAI,EAAC;IAAM,CAAC,CAAC;IAErG,IAAIC,QAAQ,GAAC,MAAMH,OAAO,CAACI,IAAI,CAAC,CAAC;IAEjC,IAAIC,SAAS,GAACF,QAAQ,CAACR,QAAQ,CAACU,SAAS;IACzC,IAAIC,IAAI,GAAC,IAAIC,IAAI,CAACF,SAAS,CAAC;IAE5B,IAAIG,UAAU,GAACH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC;IACnC,IAAIC,gBAAgB,GAACF,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAC7C,IAAIE,IAAI,GAACH,UAAU,CAAC,CAAC,CAAC;IACtB,IAAII,GAAG,GAACF,gBAAgB,CAAC,CAAC,CAAC;IAC3B,IAAIG,IAAI,GAACH,gBAAgB,CAAC,CAAC,CAAC;IAE5BnC,IAAI,CAACuC,WAAW,GAACX,QAAQ,CAACR,QAAQ,CAACoB,IAAI;IACvCvC,OAAO,CAACsC,WAAW,GAACX,QAAQ,CAACR,QAAQ,CAACnB,OAAO;IAC7CC,IAAI,CAACqC,WAAW,GAACtB,OAAO,CAACc,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC,GAAC,GAAG,GAACJ,GAAG,GAAC,GAAG,GAACnB,SAAS,CAACa,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC,GAAC,GAAG,GAAEN,IAAI,GAAC,KAAK,GAACE,IAAI;IACnGnC,WAAW,CAACoC,WAAW,GAACX,QAAQ,CAACe,OAAO,CAACC,MAAM,GAAC,IAAI;IACpDxC,SAAS,CAACmC,WAAW,GAACX,QAAQ,CAACe,OAAO,CAACvC,SAAS,CAACyC,IAAI;IACrDxC,YAAY,CAACyC,GAAG,GAAClB,QAAQ,CAACe,OAAO,CAACvC,SAAS,CAAC2C,IAAI,CAACC,OAAO,CAAC,IAAI,EAAC,UAAU,CAAC;IAEzE1C,OAAO,CAACiC,WAAW,GAACX,QAAQ,CAACe,OAAO,CAACM,WAAW,GAAC,IAAI;IACrD1C,QAAQ,CAACgC,WAAW,GAACX,QAAQ,CAACe,OAAO,CAACpC,QAAQ,GAAC,GAAG;IAClDC,YAAY,CAAC+B,WAAW,GAACX,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACd,GAAG,CAACe,oBAAoB,GAAC,GAAG;IACtF3C,SAAS,CAAC8B,WAAW,GAACX,QAAQ,CAACe,OAAO,CAACU,QAAQ,GAAC,MAAM;IAGtD7D,OAAO,CAACC,GAAG,CAACmC,QAAQ,CAAC;IACrB0B,cAAc,CAAC1B,QAAQ,CAACR,QAAQ,CAACmC,GAAG,EAAC3B,QAAQ,CAACR,QAAQ,CAACoC,GAAG,CAAC;;IAG3D;IACA,MAAMC,OAAO,GAAC,CACV,IAAIzB,IAAI,CAACJ,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC,EAC/C,IAAIC,IAAI,CAACJ,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC,CAClD;IACD,KAAI,IAAI2B,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;MAChB/C,YAAY,CAAC+C,CAAC,GAAC,CAAC,CAAC,CAACnB,WAAW,GAACX,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAACO,CAAC,CAAC,CAACrB,GAAG,CAACsB,SAAS,GAAC,IAAI;MACjFjD,eAAe,CAACgD,CAAC,GAAC,CAAC,CAAC,CAACnB,WAAW,GAACtB,OAAO,CAACwC,OAAO,CAACC,CAAC,GAAC,CAAC,CAAC,CAACjB,MAAM,CAAC,CAAC,CAAC;MAC/D7B,iBAAiB,CAAC8C,CAAC,GAAC,CAAC,CAAC,CAACnB,WAAW,GAACX,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAACO,CAAC,CAAC,CAACrB,GAAG,CAACjC,SAAS,CAACyC,IAAI;MACtFhC,YAAY,CAAC6C,CAAC,GAAC,CAAC,CAAC,CAACZ,GAAG,GAAClB,QAAQ,CAACsB,QAAQ,CAACC,WAAW,CAACO,CAAC,CAAC,CAACrB,GAAG,CAACjC,SAAS,CAAC2C,IAAI,CAACC,OAAO,CAAC,IAAI,EAAC,UAAU,CAAC;IACtG;IACA;;IAGAlD,kBAAkB,CAACuB,OAAO,CAACuC,OAAO,IAAGA,OAAO,CAACrC,SAAS,CAACsC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzE,OAAOjC,QAAQ;EACnB,CAAC,CAAC,OAAOkC,KAAK,EAAE;IACZtE,OAAO,CAACC,GAAG,CAACqE,KAAK,CAAC;EACtB;AACJ;AACAjE,MAAM,CAACkE,OAAO,GAAC,MAAI;EACfvE,OAAO,CAACC,GAAG,CAACC,SAAS,CAACsE,KAAK,CAAChB,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAChDxD,OAAO,CAACC,GAAG,CAAC0B,iBAAiB,CAACzB,SAAS,CAACsE,KAAK,CAAChB,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AACvE,CAAC;AACDtD,SAAS,CAACuE,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAI;EACzC,IAAGA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;EAC1BtE,MAAM,CAACuE,KAAK,CAAC,CAAC;EAEdF,KAAK,CAACG,cAAc,CAAC,CAAC;AAC1B,CAAC,CAAC;AACF7E,OAAO,CAACC,GAAG,CAAC0B,iBAAiB,CAAC,QAAQ,CAAC,CAAC;;AAOpC;AACA,iE","sources":["webpack://topweatherapp/webpack/bootstrap","webpack://topweatherapp/webpack/runtime/make namespace object","webpack://topweatherapp/./app/script.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { displayEarthInCanvas } from \"./globe\";\n    /*\n    weather request code\n    */\n\ndisplayEarthInCanvas();\nconsole.log(\"hello there\");\n\nconst searchBar=document.getElementById(\"searchBar\");\nconst button=document.getElementById(\"button\");\n//let searchValue=searchBar.value.replace(/\\s/g, \"_\");\n\nconst loadableComponents=document.querySelectorAll(\".loadable\");\n\n/*current weather main elements*/\nconst town=document.getElementById(\"town\");\nconst country=document.getElementById(\"country\");\nconst time=document.getElementById(\"time\")\nconst temperature=document.getElementById(\"temperature\");\nconst condition=document.getElementById(\"condition\");\nconst imgCondition=document.getElementById(\"imgCondition\");\n\n/*current weather details*/\nconst feeling=document.getElementById(\"feeling\")\nconst humidity=document.getElementById(\"humidity\")\nconst chanceOfRain=document.getElementById(\"chanceOfRain\")\nconst windSpeed=document.getElementById(\"windSpeed\")\n\n\n/*forecast weather elements*/\nconst forecastDayName=[\n    document.getElementById(\"forecastOneDayName\"),\n    document.getElementById(\"forecastTwoDayName\"),\n    document.getElementById(\"forecastThreeDayName\")\n]\n\nconst tempForecast=[\n    document.getElementById(\"tempOne\"),\n    document.getElementById(\"tempTwo\"),\n    document.getElementById(\"tempThree\")\n]\n\nconst conditionForecast=[\n    document.getElementById(\"conditionOne\"),\n    document.getElementById(\"conditionTwo\"),\n    document.getElementById(\"conditionThree\")\n];\n\nconst iconForecast=[\n    document.getElementById(\"iconOne\"),\n    document.getElementById(\"iconTwo\"),\n    document.getElementById(\"iconThree\")\n]\n\nconst baseUrl=\"https://api.weatherapi.com/v1\"\nconst weatherAPIKey=\"e1819c640df04c5b95f131642232011\";\nconst keyParameter=\"?key=\"+weatherAPIKey;\n\nconst dayName=[\"Sunday\",\"Monsday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\n//TODO add a french translation     const dayNameFR=[\"dimanche\",\"lundi\",\"mardi\",\"mercredi\",\"jeudi\",\"vendredi\",\"samedi\"]\n\nconst monthName=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n\nasync function getCurrentWeather(location){\n    try {\n        loadableComponents.forEach(component=>component.classList.add(\"loading\"));\n        \n        let request=await fetch(baseUrl+\"/forecast.json\"+keyParameter+\"&days=3\"+\"&q=\"+location,{mode:\"cors\"});\n        \n        let response=await request.json();\n        \n        let localtime=response.location.localtime;\n        let date=new Date(localtime);\n        \n        let stringTime=localtime.split(\"-\");\n        let stringDayAndHour=stringTime[2].split(\" \");\n        let year=stringTime[0];\n        let day=stringDayAndHour[0];\n        let hour=stringDayAndHour[1];\n        \n        town.textContent=response.location.name;\n        country.textContent=response.location.country;\n        time.textContent=dayName[date.getDay()]+\" \"+day+\" \"+monthName[date.getMonth()]+\" \" +year+\",\\n\"+hour;\n        temperature.textContent=response.current.temp_c+\"°C\";\n        condition.textContent=response.current.condition.text;\n        imgCondition.src=response.current.condition.icon.replace(\"//\",\"https://\");\n        \n        feeling.textContent=response.current.feelslike_c+\"°C\";\n        humidity.textContent=response.current.humidity+\"%\";\n        chanceOfRain.textContent=response.forecast.forecastday[0].day.daily_chance_of_rain+\"%\"\n        windSpeed.textContent=response.current.wind_kph+\"km/h\";\n        \n\n        console.log(response);\n        setCoordinates(response.location.lat,response.location.lon);\n        \n\n        /*forecast*/\n        const allDays=[\n            new Date(response.forecast.forecastday[1].date),\n            new Date(response.forecast.forecastday[2].date),\n        ]\n        for(let i=1;i<3;i++){\n            tempForecast[i-1].textContent=response.forecast.forecastday[i].day.avgtemp_c+\"°C\";\n            forecastDayName[i-1].textContent=dayName[allDays[i-1].getDay()];\n            conditionForecast[i-1].textContent=response.forecast.forecastday[i].day.condition.text;\n            iconForecast[i-1].src=response.forecast.forecastday[i].day.condition.icon.replace(\"//\",\"https://\");\n        }\n        /*end of forecast*/\n        \n        \n        loadableComponents.forEach(element=> element.classList.remove(\"loading\"));\n        return response;\n    } catch (error) {\n        console.log(error)\n    }\n}\nbutton.onclick=()=>{\n    console.log(searchBar.value.replace(/\\s/g, \"_\"));\n    console.log(getCurrentWeather(searchBar.value.replace(/\\s/g, \"_\")));\n}\nsearchBar.addEventListener(\"keyup\", event => {\n    if(event.key !== \"Enter\") return;\n    button.click();\n    \n    event.preventDefault();\n});\nconsole.log(getCurrentWeather(\"Vesoul\"));\n\n\n\n    \n\n    \n    //const timeline=gsap.timeline({defaults:{duration:3}});\n    //timeline.fromTo(earthGroup.scale,{z:0,x:0,y:1,},{z:1,x:1,y:1});\n    \n    \n"],"names":["displayEarthInCanvas","console","log","searchBar","document","getElementById","button","loadableComponents","querySelectorAll","town","country","time","temperature","condition","imgCondition","feeling","humidity","chanceOfRain","windSpeed","forecastDayName","tempForecast","conditionForecast","iconForecast","baseUrl","weatherAPIKey","keyParameter","dayName","monthName","getCurrentWeather","location","forEach","component","classList","add","request","fetch","mode","response","json","localtime","date","Date","stringTime","split","stringDayAndHour","year","day","hour","textContent","name","getDay","getMonth","current","temp_c","text","src","icon","replace","feelslike_c","forecast","forecastday","daily_chance_of_rain","wind_kph","setCoordinates","lat","lon","allDays","i","avgtemp_c","element","remove","error","onclick","value","addEventListener","event","key","click","preventDefault"],"sourceRoot":""}